{"version":3,"sources":["serviceWorker.js","Card.js","Cardlist.js","Searchbox.js","Scroll.js","Button.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","props","react_default","a","createElement","className","one","two","three","four","Cardlist","_ref","chosenValue","_ref$chosenArray","chosenArray","map","currentValue","index","src_Card_0","key","name","climate","terrain","population","model","manufacturer","cost_in_credits","gender","birth_year","title","director","release_date","classification","language","displayCardList","SearchBox","searchChange","type","placeholder","autoComplete","onChange","Scroll","style","overflowY","border","height","children","Button","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchField","target","value","state","planets","spaceships","vehicles","people","films","species","choice","_this2","fetch","then","response","json","swapiPlanets","results","swapiShips","swapiVehicles","swapiPeople","swapiFilms","swapiSpecies","alert","_this3","filteredSearch","filter","toLowerCase","includes","onClick","handleBtnEvent","Searchbox","src_Scroll","src_Cardlist","Component","App","src_Button_0","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96fc8866.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n\r\n\treturn(\r\n\t\t<div className = 'tile hvr-grow pt3'>\r\n\t\t\t<h1> {props.one} </h1>\r\n\t\t\t<h2> {props.two} </h2>\r\n\t\t\t<h2> {props.three} </h2>\r\n\t\t\t<h3> {props.four} </h3>\r\n\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({chosenValue, chosenArray=[]}) => {\r\n\r\nconst displayCardList = () => {\r\n\tswitch (chosenValue) {\r\n\tcase 'planets':\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tchosenArray.map((currentValue, index)  => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey = {index}\r\n\t\t\t\t\t\t\t\tone = {'Name: ' + currentValue.name}\r\n\t\t\t\t\t\t\t\ttwo = {'Climate: ' + currentValue.climate}\r\n\t\t\t\t\t\t\t\tthree = {'Terrain: ' + currentValue.terrain}\r\n\t\t\t\t\t\t\t\tfour = {'Population: '+ currentValue.population}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\r\n\tcase 'spaceships':\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tchosenArray.map((currentValue, index)  => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey = {index}\r\n\t\t\t\t\t\t\t\tone = {'Name: ' + currentValue.name}\r\n\t\t\t\t\t\t\t\ttwo = {'Model: ' + currentValue.model}\r\n\t\t\t\t\t\t\t\tthree = {'Manufacturer: ' + currentValue.manufacturer}\r\n\t\t\t\t\t\t\t\tfour = {'Cost: ' + currentValue.cost_in_credits}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\r\n\tcase 'vehicles':\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tchosenArray.map((currentValue, index)  => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey = {index}\r\n\t\t\t\t\t\t\t\tone = {'Name: ' + currentValue.name}\r\n\t\t\t\t\t\t\t\ttwo = {'Model: ' + currentValue.model}\r\n\t\t\t\t\t\t\t\tthree = {'Manufacturer: ' + currentValue.manufacturer}\r\n\t\t\t\t\t\t\t\tfour = {'Cost: ' + currentValue.cost_in_credits}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\r\n\tcase 'people':\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tchosenArray.map((currentValue, index)  => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey = {index}\r\n\t\t\t\t\t\t\t\tone = {'Name: ' + currentValue.name}\r\n\t\t\t\t\t\t\t\ttwo = {'Gender: ' + currentValue.gender}\r\n\t\t\t\t\t\t\t\tthree = {'Birth Year: ' + currentValue.birth_year}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\r\n\tcase 'films':\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tchosenArray.map((currentValue, index)  => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey = {index}\r\n\t\t\t\t\t\t\t\tone = {'Title: ' + currentValue.title}\r\n\t\t\t\t\t\t\t\ttwo = {'Director: ' + currentValue.director}\r\n\t\t\t\t\t\t\t\tthree = {'Release Date: ' + currentValue.release_date}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\r\n\tcase 'species':\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tchosenArray.map((currentValue, index)  => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey = {index}\r\n\t\t\t\t\t\t\t\tone = {'Name: ' + currentValue.name}\r\n\t\t\t\t\t\t\t\ttwo = {'Classification: ' + currentValue.classification}\r\n\t\t\t\t\t\t\t\tthree = {'Language: ' + currentValue.language}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\tdefault:\r\n\t}\r\n}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{displayCardList()}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Cardlist;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn(\r\n\t\t<div className =\"searchbar\">\r\n\t\t\t\t<input type='search'\r\n\t\t\t\tplaceholder='Search with 1st Attribute' autoComplete='off'\r\n\t\t\t\tonChange = {searchChange} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\n//using props and props.children we have access to cardlist component\r\n//we then add styles to the div tag, we can create a scroll.css\r\n//but the styles are done in here to create a box that has the overflowY\r\n//which is the scrollable component  \r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style ={{ overflowY: 'scroll', border: '3px solid black', \r\n\t\theight: '600px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll; ","import React, { Component } from 'react';\r\nimport './Button.css';\r\nimport Cardlist from './Cardlist';\r\nimport Searchbox from './Searchbox';\r\nimport Scroll from './Scroll';\r\n\r\nclass Button extends Component {\r\n\t\r\n\tconstructor(){\r\n\t    super();\r\n\t     this.state = {\r\n\t      planets:[],\r\n\t      spaceships:[],\r\n\t      vehicles:[],\r\n\t      people:[],\r\n\t      films:[],\r\n\t      species:[],\r\n\t      chosenValue:'',\r\n\t      chosenArray:[],\r\n\t      searchField:''\r\n    \t}\r\n  \t}\r\n\r\n\thandleBtnEvent(choice){\r\n\t\tswitch (choice){\r\n\t\t\tcase 'planets':\r\n\t\t\t\tfetch('https://swapi.co/api/planets/')\r\n\t \t\t\t.then(response => response.json())\r\n\t\t    \t.then(swapiPlanets =>  \r\n\t\t    \tthis.setState({planets: swapiPlanets.results}));\r\n\t\t    \tthis.setState({chosenValue: choice});\r\n\t\t\t\tthis.setState({chosenArray : this.state.planets});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'spaceships':\r\n\t\t\t\tfetch('https://swapi.co/api/starships/')\r\n\t\t\t    .then(response => response.json())\r\n\t\t\t    .then(swapiShips =>  \r\n\t\t\t    this.setState({spaceships: swapiShips.results}));\r\n\t\t\t    this.setState({chosenValue: choice});\r\n\t\t\t\tthis.setState({chosenArray : this.state.spaceships});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'vehicles':\r\n\t\t\t\tfetch('https://swapi.co/api/vehicles/')\r\n\t\t\t     .then(response => response.json())\r\n\t\t\t     .then(swapiVehicles =>  \r\n\t\t\t     this.setState({vehicles: swapiVehicles.results}));\r\n \t\t    \tthis.setState({chosenValue: choice});\r\n\t\t\t\tthis.setState({chosenArray : this.state.vehicles});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'people':\r\n\t\t\t\tfetch('https://swapi.co/api/people/')\r\n\t\t\t     .then(response => response.json())\r\n\t\t\t     .then(swapiPeople =>  \r\n\t\t\t     this.setState({people: swapiPeople.results}));\r\n \t\t    \tthis.setState({chosenValue: choice});\r\n\t\t\t\tthis.setState({chosenArray : this.state.people});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'films':\r\n\t\t\t\tfetch('https://swapi.co/api/films/')\r\n\t\t\t     .then(response => response.json())\r\n\t\t\t     .then(swapiFilms =>  \r\n\t\t\t     this.setState({films: swapiFilms.results}));\r\n \t\t    \tthis.setState({chosenValue: choice});\r\n\t\t\t\tthis.setState({chosenArray : this.state.films});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'species':\r\n\t\t\t\tfetch('https://swapi.co/api/species/')\r\n\t\t\t     .then(response => response.json())\r\n\t\t\t     .then(swapiSpecies=>  \r\n\t\t\t     this.setState({species: swapiSpecies.results}));\r\n \t\t    \tthis.setState({chosenValue: choice});\r\n\t\t\t\tthis.setState({chosenArray : this.state.species});\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\talert(\"Something went terrible wrong\");\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) =>{\r\n\t\tthis.setState({searchField: event.target.value})\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst filteredSearch = this.state.chosenArray.filter(chosenValue => {\r\n\t\t\tif (this.state.chosenValue === 'films'){\r\n\t\t\t\treturn (\r\n\t\t\t\t\tchosenValue.title.toLowerCase().includes(\r\n\t\t\t\t\tthis.state.searchField.toLowerCase())\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn(\r\n\t\t\t \t\tchosenValue.name.toLowerCase().includes(\r\n\t\t\t\t\tthis.state.searchField.toLowerCase())\r\n\t\t\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn(\r\n\t\t\t<div className = 'tc justify-center'>\r\n\t\t\t\t<button onClick ={(event) => this.handleBtnEvent('planets')} className=\"b1\"> Planets </button>\r\n\t\t\t\t<button onClick ={(event) => this.handleBtnEvent('spaceships')}className=\"b1\"> Spaceships </button>\r\n\t\t\t\t<button onClick ={(event) => this.handleBtnEvent('vehicles')} className=\"b1\"> Vehicles </button>\r\n\t\t\t\t<button onClick ={(event) => this.handleBtnEvent('people')} className=\"b1\"> People </button>\r\n\t\t\t\t<button onClick ={(event) => this.handleBtnEvent('films')} className=\"b1\"> Films </button>\r\n\t\t\t\t<button onClick ={(event) => this.handleBtnEvent('species')}className=\"b1\"> Species </button>\r\n\t\t\t\t<div className = 'pb3 pt3'>\r\n\t\t\t\t\t<Searchbox searchChange={this.onSearchChange}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Scroll className = 'pt3'>\r\n\t\t\t\t\t<div className = 'pt1'>\r\n\t\t\t\t\t\t<Cardlist chosenValue = {this.state.chosenValue} chosenArray = {filteredSearch}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\nimport Button from './Button';\nimport 'tachyons';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return(\n\t    <div className = 'body'>\n\t      <div className ='db tc'>\n\t      \t<div className = 'title'>\n\t        \t<h1> Star Wars Database </h1>\n\t        </div>\n\t        <Button />\n\t      </div>\n\t    </div>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}